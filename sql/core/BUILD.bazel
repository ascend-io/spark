load("@rules_java//java:defs.bzl", "java_test")
load("//:defs.bzl", "hive", "scala", "scala_rje")

scala_library(
    name = "core",
    srcs = glob([
        "src/main/java/**/*.java",
        "src/main/scala/**/*.scala",
        "src/main/scala-%s/**/*.scala" % scala,
        "v%s/src/main/scala/**/*.scala" % hive,
        "v%s/src/main/java/**/*.java" % hive,
    ]),
    resources = glob([
        "src/main/resources/**",
    ]),
    visibility = ["//visibility:public"],
    deps = [
        "//common/kvstore",
        "//common/network-common",
        "//common/sketch",
        "//common/tags",
        "//common/unsafe",
        "//core",
        "//launcher",
        "//sql/catalyst",
        "@maven//:com_esotericsoftware_kryo",
        "@maven//:com_fasterxml_jackson_core_jackson_annotations",
        "@maven//:com_fasterxml_jackson_core_jackson_core",
        "@maven//:com_fasterxml_jackson_core_jackson_databind",
        "@maven//:com_google_code_findbugs_jsr305",
        "@maven//:com_google_flatbuffers_flatbuffers_java",
        "@maven//:com_google_guava_guava",
        "@maven//:com_univocity_univocity_parsers",
        "@maven//:commons_io_commons_io",
        "@maven//:io_dropwizard_metrics_metrics_core",
        "@maven//:javax_servlet_javax_servlet_api",
        "@maven//:javax_ws_rs_javax_ws_rs_api",
        "@maven//:net_razorvine_pyrolite",
        "@maven//:org_antlr_antlr4_runtime",
        "@maven//:org_apache_arrow_arrow_format",
        "@maven//:org_apache_arrow_arrow_memory",
        "@maven//:org_apache_arrow_arrow_vector",
        "@maven//:org_apache_commons_commons_lang3",
        "@maven//:org_apache_commons_commons_text",
        "@maven//:org_apache_hadoop_hadoop_common",
        "@maven//:org_apache_hadoop_hadoop_hdfs_client",
        "@maven//:org_apache_hadoop_hadoop_mapreduce_client_core",
        "@maven//:org_apache_hive_hive_exec_core",
        "@maven//:org_apache_hive_hive_storage_api",
        "@maven//:org_apache_orc_orc_core",
        "@maven//:org_apache_orc_orc_mapreduce",
        "@maven//:org_apache_parquet_parquet_column",
        "@maven//:org_apache_parquet_parquet_common",
        "@maven//:org_apache_parquet_parquet_encoding",
        "@maven//:org_apache_parquet_parquet_hadoop",
        "@maven//:org_json4s_json4s_ast_" + scala_rje,
        "@maven//:org_json4s_json4s_core_" + scala_rje,
        "@maven//:org_json4s_json4s_jackson_" + scala_rje,
        "@maven//:org_scala_lang_modules_scala_parser_combinators_" + scala_rje,
        "@maven//:org_scala_lang_modules_scala_xml_" + scala_rje,
        "@maven//:org_slf4j_jul_to_slf4j",
        "@maven//:org_slf4j_slf4j_api",
    ],
)

scala_library(
    name = "test",
    srcs = glob(
        [
            "src/test/**/*.scala",
            "src/test/**/*.java",
        ],
        exclude = [
            "src/test/**/*Suite.java",
            "src/test/**/*Test.java",
            "src/test/**/*Benchmark.java",
            "src/test/**/*Suite.scala",
            "src/test/**/*Test.scala",
            "src/test/**/*Benchmark.scala",
            "src/test/**/*Benchmark.scala",
            "v%s/src/test/scala/**/*.scala" % hive,
            "v%s/src/test/java/**/*.java" % hive,
        ],
    ) + glob([
        "src/test/**/SQLQueryTestSuite.scala",
        "src/test/**/OrcPartitionDiscoverySuite.scala",
        "src/test/**/SessionStateSuite.scala",
        "src/test/**/SQLViewSuite.scala",
        "src/test/**/OrcSourceSuite.scala",
        "src/test/**/OrcPartitionDiscoveryTest.scala",
        "src/test/**/UDTRegistrationSuite.scala",
        "src/test/**/OrcPartitionDiscoveryTest.scala",
        "src/test/**/FileSourceStrategySuite.scala",
        "src/test/**/BucketedWriteSuite.scala",
        "src/test/**/FileBasedDataSourceSuite.scala",
        "src/test/**/DDLSuite.scala",
        "src/test/**/CheckpointFileManagerSuite.scala",
        "src/test/**/NullableColumnBuilderSuite.scala",
        "v%s/src/test/**/OrcFilterSuite.scala" % hive,
        "src/test/**/StateStoreCoordinatorSuite.scala",
        "src/test/**/BucketedReadSuite.scala",
        "src/test/**/ShowCreateTableSuite.scala",
        "src/test/**/OrcQuerySuite.scala",
        "src/test/**/StateStoreSuite.scala",
        "src/test/**/ParquetCompatibilityTest.scala",
        "src/test/**/FlatMapGroupsWithStateSuite.scala",
        "src/test/**/ReadNestedSchemaTest.scala",
        "src/test/**/SchemaPruningSuite.scala",
        "src/test/**/FilteredScanSuite.scala",
        "src/test/**/OrcTest.scala",
        "src/test/**/sql/test/DataFrameReaderWriterSuite.scala",
        "src/test/**/DataSourceV2DataFrameSessionCatalogSuite.scala",
        "src/test/**/TableScanSuite.scala",
        "src/test/**/DataSourceV2SQLSuite.scala",
        "src/test/**/DataFrameAggregateSuite.scala",
        "src/test/**/StateStoreMetricsTest.scala",
        "src/test/**/DatasetSuite.scala",
        "src/test/**/ParquetTest.scala",
        "src/test/**/ReadSchemaTest.scala",
        "src/test/**/BenchmarkQueryTest.scala",
        "src/test/**/DataSourceWriteBenchmark.scala",
        "src/test/**/QueryTest.scala",
        "src/test/**/SparkPlanTest.scala",
        "src/test/**/StreamTest.scala",
        "src/test/**/DataSourceV2Suite.scala",
        "src/test/**/DataSourceV2UtilsSuite.scala",
        "src/test/**/NestedSchemaPruningBenchmark.scala",
        "src/test/**/SqlBasedBenchmark.scala",
        "src/test/**/StreamingQueryStatusAndProgressSuite.scala",
        "src/test/**/StreamingQuerySuite.scala",
        "src/test/**/ForeachWriterSuite.scala",
        "src/test/**/DDLSourceLoadSuite.scala",
        "src/test/**/DataSourceTest.scala",
        "src/test/**/StreamingDataSourceV2Suite.scala",
        "src/test/**/FileBasedDataSourceTest.scala",
        "src/test/**/ExtraStrategiesSuite.scala",
        "src/test/**/AnalysisSuite.scala",
        "src/test/**/ContinuousSuite.scala",
        "src/test/**/BatchEvalPythonExecSuite.scala",
        "src/test/**/DatasetAggregatorSuite.scala",
        "src/test/**/TPCDSQuerySuite.scala",
    ]),
    visibility = ["//visibility:public"],
    deps = [
        ":core",
        "//common/tags",
        "//common/tags:test",
        "//common/unsafe",
        "//core",
        "//core:test",
        "//sql/catalyst",
        "//sql/catalyst:test",
        "@maven//:com_esotericsoftware_kryo",
        "@maven//:com_google_protobuf_protobuf_java",
        "@maven//:commons_io_commons_io",
        "@maven//:io_dropwizard_metrics_metrics_core",
        "@maven//:io_netty_netty_all",
        "@maven//:org_apache_commons_commons_lang3",
        "@maven//:org_apache_hadoop_hadoop_common",
        "@maven//:org_apache_hadoop_hadoop_mapreduce_client_core",
        "@maven//:org_apache_hive_hive_storage_api",
        "@maven//:org_apache_orc_orc_core",
        "@maven//:org_apache_orc_orc_mapreduce",
        "@maven//:org_apache_parquet_parquet_column",
        "@maven//:org_apache_parquet_parquet_common",
        "@maven//:org_apache_parquet_parquet_hadoop",
        "@maven//:org_apache_zookeeper_zookeeper",
        "@maven//:org_mockito_mockito_core",
        "@maven//:org_scalatest_scalatest_" + scala_rje,
        "@maven//:junit_junit",
        "@maven//:org_apache_avro_avro",
        "@maven//:org_scalactic_scalactic_" + scala_rje,
        "@maven//:org_slf4j_slf4j_api",
        "@maven//:org_json4s_json4s_ast_" + scala_rje,
        "@maven//:org_json4s_json4s_core_" + scala_rje,
        "@maven//:org_json4s_json4s_jackson_" + scala_rje,
    ],
)

[java_test(
    name = src[:-5],
    srcs = [
        src,
    ],
    data = glob([
        "src/test/resources/**/*.json",
    ]),
    javacopts = [
        "-Xep:ArrayHashCode:WARN",
        "-Xep:JUnit4TestNotRun:WARN",
        "-Xep:GuardedBy:WARN",
    ],
    # resources = glob([
    #     "src/test/resources/**/*.json",
    # ]),
    deps = [
        ":core",
        ":test",
        "//common/sketch",
        "//common/unsafe",
        "//core",
        "//core:test",
        "//sql/catalyst",
        "//sql/catalyst:test",
        "@maven//:com_google_guava_guava",
        "@maven//:junit_junit",
        "@maven//:org_apache_avro_avro",
        "@maven//:org_apache_commons_commons_lang3",
        "@maven//:org_scala_lang_scala_library",
    ],
) for src in glob(
    [
        "src/test/**/*Suite.java",
        "src/test/**/*Test.java",
        "src/test/**/*Benchmark.java",
        "v%s/src/test/java/**/*Suite.java" % hive,
        "v%s/src/test/java/**/*Test.java" % hive,
        "v%s/src/test/java/**/*Benchmark.java" % hive,
    ],
    exclude = [
        "src/test/**/CompatibilityTest.java",
        "src/test/**/JavaBeanDeserializationSuite.java",
        "src/test/**/JavaDataFrameSuite.java",
    ],
)]

[scala_test(
    name = src[:-6],
    size = "large",
    srcs = [
        src,
    ],
    data = glob([
        "src/test/resources/sql-tests/**",
    ]),
    jvm_flags = [
        "-Dspark.test.home=.",
        "-Dio.netty.tryReflectionSetAccessible=true",
    ],
    resources = glob([
        "src/test/resources/**",
    ]),
    unused_dependency_checker_mode = "off",
    deps = [
        ":core",
        ":test",
        "//common/kvstore",
        "//common/network-common",
        "//common/sketch",
        "//common/tags:test",
        "//common/unsafe",
        "//core",
        "//core:test",
        "//sql/catalyst",
        "//sql/catalyst:test",
        "@maven//:com_univocity_univocity_parsers",
        "@maven//:io_dropwizard_metrics_metrics_core",
        "@maven//:log4j_log4j",
        "@maven//:mysql_mysql_connector_java",
        "@maven//:net_sourceforge_htmlunit_htmlunit",
        "@maven//:org_apache_hadoop_hadoop_common",
        "@maven//:org_seleniumhq_selenium_selenium_api",
        "@maven//:org_seleniumhq_selenium_selenium_htmlunit_driver",
        "@maven//:org_w3c_css_sac",
        "@maven//:org_json4s_json4s_ast_" + scala_rje,
        "@maven//:org_json4s_json4s_core_" + scala_rje,
        "@maven//:org_json4s_json4s_jackson_" + scala_rje,
        "@maven//:com_esotericsoftware_kryo",
        "@maven//:com_h2database_h2",
        "@maven//:commons_io_commons_io",
        "@maven//:javax_servlet_javax_servlet_api",
        "@maven//:junit_junit",
        "@maven//:org_apache_arrow_arrow_memory",
        "@maven//:org_apache_arrow_arrow_vector",
        "@maven//:org_apache_commons_commons_lang3",
        "@maven//:org_apache_commons_commons_math3",
        "@maven//:org_apache_hadoop_hadoop_mapreduce_client_core",
        "@maven//:org_apache_parquet_parquet_avro",
        "@maven//:org_apache_parquet_parquet_column",
        "@maven//:org_apache_parquet_parquet_common",
        "@maven//:org_apache_parquet_parquet_hadoop",
        "@maven//:org_mockito_mockito_core",
        "@maven//:org_postgresql_postgresql",
        "@maven//:org_slf4j_slf4j_api",
        "@maven//:org_scala_lang_modules_scala_xml_" + scala_rje,
        "@maven//:org_scalacheck_scalacheck_" + scala_rje,
        "@maven//:com_fasterxml_jackson_core_jackson_core",
        "@maven//:com_google_guava_guava",
        "@maven//:com_google_protobuf_protobuf_java",
        "@maven//:org_apache_avro_avro",
        "@maven//:org_apache_hive_hive_storage_api",
        "@maven//:org_apache_orc_orc_core",
        "@maven//:org_apache_orc_orc_mapreduce",
    ],
) for src in glob(
    [
        "src/test/**/*Suite.scala",
        "src/test/**/*Benchmark.scala",
        "src/test/**/*Test.scala",
        "v%s/src/test/scala/**/*Suite.scala" % hive,
        "v%s/src/test/scala/**/*Benchmark.scala" % hive,
        "v%s/src/test/scala/**/*Test.scala" % hive,
    ],
    exclude = [
        "src/test/**/StreamingAggregationSuite.scala",
        "src/test/**/CSVSuite.scala",
        "src/test/**/ParquetProtobufCompatibilitySuite.scala",
        "src/test/**/StateStoreRDDSuite.scala",
        "src/test/**/SQLQueryTestSuite.scala",
        "src/test/**/JsonSuite.scala",
        "src/test/**/StreamingQuerySuite.scala",
        "src/test/**/StreamSuite.scala",
        "src/test/**/FlatMapGroupsWithStateSuite.scala",
        "src/test/**/FileStreamSourceSuite.scala",
        "src/test/**/WholeStageCodegenSparkSubmitSuite.scala",
        "src/test/**/PythonUDFSuite.scala",
        "src/test/**/OffsetSeqLogSuite.scala",
        "src/test/**/StreamMetadataSuite.scala",
        "src/test/**/FileStreamSinkLogSuite.scala",
        "src/test/**/ParquetThriftCompatibilitySuite.scala",
        "src/test/**/ParquetInteroperabilitySuite.scala",
        "src/test/**/BroadcastJoinSuite.scala",
        "src/test/**/ExecutorSideSQLConfSuite.scala",
        "src/test/**/StreamingJoinSuite.scala",
        "src/test/**/JavaDataFrameSuite.scala",
        "src/test/**/FileBasedDataSourceSuite.scala",
        "src/test/**/EventTimeWatermarkSuite.scala",
        "src/test/**/ParquetIOSuite.scala",
        "src/test/**/TextSuite.scala",
        "src/test/**/WholeTextFileSuite.scala",
        "src/test/**/ParquetFilterSuite.scala",
        "src/test/**/ParquetCommitterSuite.scala",
    ],
)]
